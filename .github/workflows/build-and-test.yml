name: Build and Test

on:
  push:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'
  pull_request:
    branches: [ main, develop ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'

jobs:
  build:
    name: Build ${{ matrix.module }} on ${{ matrix.platform }}
    runs-on: ${{ matrix.runner }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x64 - libsecret
          - platform: linux-x64
            runner: ubuntu-latest
            target: linuxX64
            module: klib-libsecret
            
          # Linux ARM64 - libsecret  
          - platform: linux-arm64
            runner: ubuntu-latest
            target: linuxArm64
            module: klib-libsecret
            
          # Windows x64 - wincred
          - platform: windows-x64
            runner: windows-latest
            target: mingwX64
            module: klib-wincred

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Setup Gradle Cache
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          .gradle/
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    # Install Linux platform dependencies
    - name: Install Linux dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libsecret-1-dev libglib2.0-dev pkg-config
        
    # Install Windows platform dependencies
    - name: Setup Windows build environment
      if: runner.os == 'Windows'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        update: true
        install: |
          mingw-w64-x86_64-gcc
          mingw-w64-x86_64-pkg-config
          
    # Native build
    - name: Build ${{ matrix.module }} for ${{ matrix.target }}
      run: |
        echo "Building ${{ matrix.module }} for ${{ matrix.platform }} natively"
        ./gradlew :${{ matrix.module }}:${{ matrix.target }}Main --info
        
    - name: Run tests
      run: |
        ./gradlew :${{ matrix.module }}:test --continue
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: klib-${{ matrix.platform }}
        path: |
          ${{ matrix.module }}/build/bin/${{ matrix.target }}/
          ${{ matrix.module }}/build/libs/
        retention-days: 7

  build-status:
    name: Build Status
    runs-on: ubuntu-latest
    needs: build
    if: always()
    
    steps:
    - name: Check build results
      run: |
        if [[ "${{ needs.build.result }}" == "success" ]]; then
          echo "✅ All builds passed successfully"
        else
          echo "❌ Some builds failed"
          exit 1
        fi